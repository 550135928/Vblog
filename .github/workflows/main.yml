# This is a basic workflow to help you get started with Actions

name: Build, test and deploy

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs: 
  ui-build:
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.1
      
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm 
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
            
      - name: Install dependencies
        working-directory: vblog-ui
        run: npm install
      
      - name: Build npm package
        working-directory: vblog-ui
        env:
          CI: ""
        run: npm run build --if-present
      
      - name: Upload server build artifact
        uses: actions/upload-artifact@v2
        with: 
          path: vblog-ui/build/** 
      
      
  # Build Vblog server and deploy
  server-build-deploy:
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Setup Java JDK
      uses: actions/setup-java@v1.4.0
      with:
        java-version: 11 

    - name: Cache Maven packages
      uses: actions/cache@v2.1.0
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
  

    - name: Build server
      working-directory: vblog-server
      run: mvn -B package --file pom.xml
      
    - name: Upload server build artifact
      uses: actions/upload-artifact@v2
      with: 
        path: vblog-server/target/*.jar 
  
    - name: copy file via ssh password
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        source: "vblog-server/target/*.jar"
        target: "/root/vblog"
